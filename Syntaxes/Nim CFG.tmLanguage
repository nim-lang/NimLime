<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>nim.cfg</string>
	</array>
	<key>name</key>
	<string>Nim Config</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#directives</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#assignements</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>assignements</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(--?)?[A-Za-z]\w*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.nimcfg</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?:(\[)([A-Za-z]\w*)(]))? *(?=:|%?=)|$\n?</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.brackets.begin.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.nimcfg</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.brackets.end.nimcfg</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.accessor.dot.nimcfg</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\.)[A-Za-z]\w*</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>:|%?=</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.nimcfg</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$\n?</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#exprs</string>
						</dict>
						<dict>
							<key>match</key>
							<string>&amp;</string>
							<key>name</key>
							<string>keyword.operator.nimcfg</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[:=]</string>
							<key>name</key>
							<string>punctuation.separator.key-value.nimcfg</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>block-comments</key>
		<array>
			<dict>
				<key>begin</key>
				<string>#\[</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.begin.nimcfg</string>
					</dict>
				</dict>
				<key>end</key>
				<string>]#</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.end.nimcfg</string>
					</dict>
				</dict>
				<key>name</key>
				<string>comment.block.nimcfg</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#block-comments</string>
					</dict>
				</array>
			</dict>
		</array>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block-comments</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(#)(?: *(TODO|todo)\b)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.deprecated.nimcfg</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$\n?</string>
					<key>name</key>
					<string>comment.line.number-sign.nimcfg</string>
				</dict>
			</array>
		</dict>
		<key>cond-expr</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#groups</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-constants</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:and|or|not)\b</string>
					<key>name</key>
					<string>keyword.operator.logical.nimcfg</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[A-Za-z]\w*</string>
				</dict>
			</array>
		</dict>
		<key>directives</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#if-stmt</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.keyword.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.conditional.else.nimcfg</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.begin.nimcfg</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(@) *(else)(?: *(:))?</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.keyword.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.conditional.end.nimcfg</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(@) *(end)</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#env-stmt</string>
				</dict>
			</array>
		</dict>
		<key>env-stmt</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(@) *((?:put|append|prepend)[Ee]nv|write)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.keyword.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.nimcfg</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$\n?</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#exprs</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>exprs</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#str-lits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-constants</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[A-Za-z]\w*</string>
					<key>name</key>
					<string>string.unquoted.nimcfg</string>
				</dict>
			</array>
		</dict>
		<key>groups</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.begin.nimcfg</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.end.nimcfg</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.nimcfg</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cond-expr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if-stmt</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(@)(?:(elif)|(if))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.keyword.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.conditional.elseif.nimcfg</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.conditional.if.nimcfg</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(:)|$</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.begin.nimcfg</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cond-expr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>language-constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?:true|false|on|off)\b</string>
					<key>name</key>
					<string>constant.language.boolean.nimcfg</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.number.integer.hexadecimal.nimcfg</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.base.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.nimcfg</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.suffix.nimcfg</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x: \b(0[Xx]) (\h(?:_?\h)*) ('?[Ii](?:8|16|32|64))? )</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.number.integer.octal.nimcfg</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.base.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.nimcfg</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.suffix.nimcfg</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x: \b(0o) ([0-7](?:_?[0-7])*) ('?[Ii](?:8|16|32|64))? )</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.number.integer.binary.nimcfg</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.base.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.nimcfg</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.suffix.nimcfg</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x: \b(0[Bb]) ([01](?:_?[01])*) ('?[Ii](?:8|16|32|64))? )</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.number.integer.decimal.nimcfg</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.suffix.nimcfg</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x: \b(\d(?:_?\d)*) ('?[Ii](?:8|16|32|64))? )</string>
				</dict>
			</array>
		</dict>
		<key>rstr-lit</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>([Rr])(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.nimcfg punctuation.definition.string.begin.nimcfg</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.quoted.double.nimcfg</string>
					<key>end</key>
					<string>("(?!"))|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.nimcfg punctuation.definition.string.end.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.nimcfg invalid.illegal.unclosed-string.nimcfg</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>""</string>
							<key>name</key>
							<string>constant.character.escape.nimcfg</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>str-lit</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.nimcfg</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nimcfg</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.nimcfg</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(?:[ABCEFLNPRTVabceflnprtv"'\\]|\d+|[Xx]\h{2}|[Uu](?:\h{4}|\{\h+}))</string>
							<key>name</key>
							<string>constant.character.escape.nimcfg</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\</string>
							<key>name</key>
							<string>invalid.illegal.lone-escape.nimcfg</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>str-lits</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#triplestr-lit</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rstr-lit</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#str-lit</string>
				</dict>
			</array>
		</dict>
		<key>triplestr-lit</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>([Rr])?(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.nimcfg</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.triple.nimcfg punctuation.definition.string.begin.nimcfg</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.quoted.triple.nimcfg</string>
					<key>end</key>
					<string>"""(?!")</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.triple.nimcfg punctuation.definition.string.end.nimcfg</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.nimcfg</string>
</dict>
</plist>
