<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>nim</string>
		<string>nims</string>
		<string>nimble</string>
	</array>
	<key>name</key>
	<string>Nim</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#type-defs</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#const-defs</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#var-let-using-defs</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#pragmas</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#brackets</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#punctuations</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#block-doc-comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#for-stmts</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#asm-stmts</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#routines</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#fmt-strs</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operators</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#literals</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#do-stmts</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#calls</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtins</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#generic-symbols</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>asm-stmt-1</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>([Rr])?(""")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.triple.nim punctuation.definition.string.begin.nim</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.quoted.triple.nim</string>
					<key>end</key>
					<string>"""(?!")</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.triple.nim punctuation.definition.string.end.nim</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([Rr])(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.nim punctuation.definition.string.begin.nim</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.quoted.double.nim</string>
					<key>end</key>
					<string>(")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.nim punctuation.definition.string.begin.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nim</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.nim punctuation.definition.string.begin.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nim</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.nim</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(?:[ABCEFLNPRTVabceflnprtv"'\\]|\d+|[Xx]\h{2}|[Uu](?:\h{4}|\{\h+}))</string>
							<key>name</key>
							<string>constant.character.escape.nim</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\</string>
							<key>name</key>
							<string>invalid.illegal.lone-escape.nim</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>asm-stmts</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>asm\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[^"Rr{\s])|(?&lt;=")</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#pragmas</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#asm-stmt-1</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>block-comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>#\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>]#</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.nim</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.number-sign.nim</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#block-comments</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>block-doc-comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>##\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>]##</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.nim</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.documentation.nim</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#block-doc-comments</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#square-brackets</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.end.nim</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.braces.nim</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.end.nim</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.parens.nim</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>builtins</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bresult\b</string>
					<key>name</key>
					<string>variable.language.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?x:any|array|auto|bool|byte |c(?:double|float|u?(?:long(?:long)?|char|int|short)|longdouble|schar |size(?:_t)?|string(?:[Aa]rray)?) |char|float(?:32|64)?|iterable|lent|open[Aa]rray|owned|pointer|ptr|range|ref|se[qt] |sink|static|string|typed?|type[Dd]esc|u?int(?:8|16|32|64)?|untyped|varargs|void)\b</string>
					<key>name</key>
					<string>storage.type.primitive.nim</string>
				</dict>
			</array>
		</dict>
		<key>calls</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x: (?= (?: (?!(?:out|ptr|ref|tuple)\b) [A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+` ) (?:\[.*])? (?: \( |" |[ ]+ (?: [_\d"'`\[\(] |(?!\.|(?:\*?[ ]*)[:=]|=[^=])[-=+*/&lt;&gt;@$~&amp;%|!?^.:\\∙∘×★⊗⊘⊙⊛⊠⊡∩∧⊓±⊕⊖⊞⊟∪∨⊔]+[^\-=+*/&lt;&gt;@$~&amp;%|!?^.:\\∙∘×★⊗⊘⊙⊛⊠⊡∩∧⊓±⊕⊖⊞⊟∪∨⊔\s] |(?!as|asm|and|bind|break|concept|const|continue|converter |defer|discard|distinct|div|elif|else|end|except|export|finally|from|import |include|interface|is(?:not)?|let|macro|method|mixin|mod|(?:not)?in|of |raise|sh[lr]|template|using|while|yield|x?or)[A-Za-z\x80-\xff] |\{(?!\.) ) ) ) )</string>
					<key>end</key>
					<string>(?=[^\[\(`\w\x{80}-\x{ff}])|(?&lt;=["\)])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?=[`_A-Za-z\x80-\xff])</string>
							<key>end</key>
							<string>(?=[^`_A-Za-z\x80-\xff])</string>
							<key>name</key>
							<string>entity.name.function.nim</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#builtins</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\[:?</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.generic.begin.nim</string>
								</dict>
							</dict>
							<key>end</key>
							<string>]</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.generic.end.nim</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function-call.nim meta.generic.nim</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.arguments.begin.nim</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.arguments.end.nim</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function-call.arguments.nim</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>variable.parameter.function.nim</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.key-value.nim</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(?x: (?= (?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`) [ ]* [:=](?![-=+*/&lt;&gt;@$~&amp;%|!?^.:\\∙∘×★⊗⊘⊙⊛⊠⊡∩∧⊓±⊕⊖⊞⊟∪∨⊔]) ) (?!(?x:addr|and|as|asm|bind|block|break|case|cast|concept |const|continue|converter|defer|discard|distinct|div|do |elif|else|end|enum|except|export|finally|for|from|func |if|import|in|include|interface|is|isnot|iterator|let |macro|method|mixin|mod|nil|not|notin|object|of|or|out |proc|ptr|raise|ref|return|shl|shr|static|template|try |tuple|type|using|var|when|while|xor|yield)\b ) ([A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`)(?:[ ]*(:))? )</string>
								</dict>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#triplestr_lit</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>"</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.nim</string>
								</dict>
							</dict>
							<key>end</key>
							<string>("(?!"))|(\n)</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.nim</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.unclosed-string.nim</string>
								</dict>
							</dict>
							<key>name</key>
							<string>string.quoted.double.nim</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>""</string>
									<key>name</key>
									<string>constant.character.escape.nim</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>characters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.nim</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>'(?:[^\\']|(\\(?:[ABCEFLNRTVabceflnrtv"'\\]|\d+|[Xx]\h{2})))'</string>
				</dict>
				<dict>
					<key>match</key>
					<string>'[^']+'</string>
					<key>name</key>
					<string>invalid.illegal.nim</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block-comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line-comments</string>
				</dict>
			</array>
		</dict>
		<key>const-defs</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(const) +(?=[A-Za-z\x80-\xff]|\(|`|_\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>([A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`)(?: *(\*))?|(?=[^\(])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.constant.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.nim</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#const-name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^const\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^(?!  |$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>^  (?=[A-Za-z\x80-\xff]|\(|`|_\b)</string>
							<key>end</key>
							<string>([A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`)(?: *(\*))?|(?=[^\(])</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.constant.nim</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.nim</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#const-name</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>const-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))|(?=[^{_`,#A-Za-z\x80-\xff\s])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.end.nim</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.constant.nim</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.nim</string>
								</dict>
							</dict>
							<key>match</key>
							<string>([A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`)(?: *(\*))?</string>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.separator.nim</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pragmas</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#doc-comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>do-stmts</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\bdo\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(-&gt;)|(?=[^\-\( ])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.annotation.return.nim</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#param-list</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>doc-comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block-doc-comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line-doc-comments</string>
				</dict>
			</array>
		</dict>
		<key>fmt-strs</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?:(fmt)|(&amp;))(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.nim variable.function.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.nim</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.quoted.triple.nim punctuation.definition.string.begin.nim</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.quoted.triple.nim</string>
					<key>end</key>
					<string>"""(?!")</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.triple.nim punctuation.definition.string.end.nim</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>{{|}}</string>
							<key>name</key>
							<string>constant.character.escape.nim</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.nim</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(=?(?: *:[^}]*)?) *(})|(?="""[^"])</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.other.format-spec.nim</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.nim</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.embedded.nim</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(fmt)(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.nim variable.function.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.nim punctuation.definition.string.begin.nim</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.quoted.triple.nim</string>
					<key>end</key>
					<string>("(?!"))|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.nim punctuation.definition.string.end.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nim</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>{{|}}|""</string>
							<key>name</key>
							<string>constant.character.escape.nim</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.nim</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(=?(?: *:[^}]*)?) *(})|(\n)|(?=")</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.other.format-spec.nim</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.nim</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.nim</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.embedded.nim</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&amp;)(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.nim punctuation.definition.string.begin.nim</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.quoted.double.nim</string>
					<key>end</key>
					<string>(")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.nim punctuation.definition.string.end.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nim</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>{{|}}</string>
							<key>name</key>
							<string>constant.character.escape.nim</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.nim</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(=?(?: *:[^}]*)?) *(})|(\n)|(?=")</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.other.format-spec.nim</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.nim</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.nim</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.embedded.nim</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\\(?:[ABCEFLNPRTVabceflnprtv"'\\]|\d+|[Xx]\h{2}|[Uu](?:\h{4}|\{\h+}))</string>
									<key>name</key>
									<string>constant.character.escape.nim</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\\</string>
									<key>name</key>
									<string>invalid.illegal.lone-escape.nim</string>
								</dict>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>\\(?:[ABCEFLNPRTVabceflnprtv"'\\]|\d+|[Xx]\h{2}|[Uu](?:\h{4}|\{\h+}))</string>
							<key>name</key>
							<string>constant.character.escape.nim</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\</string>
							<key>name</key>
							<string>invalid.illegal.lone-escape.nim</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>for-stmt-1</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#pragmas</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<key>for-stmts</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>for\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.loop.for.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(in\b)|(?=[^#,{_`A-Za-z\x80-\xff\s])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.loop.for.in.nim</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.parens.begin.nim</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(in\b)|(\))|(?=[^#,{_`A-Za-z\x80-\xff\s])</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.control.loop.for.in.nim</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.parens.end.nim</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#for-stmt-1</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#for-stmt-1</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>generic-param-list</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=[`*\w\x{80}-\x{ff}]) *(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.generic.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(])|(?=[^#_`:=,;A-Za-z\x80-\xff\s])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.generic.end.nim</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.generic.nim</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#generic-param-list-0</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>generic-param-list-0</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`</string>
					<key>name</key>
					<string>variable.parameter.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[,;]</string>
					<key>name</key>
					<string>punctuation.separator.nim</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(:)|(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.annotation.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>([,;])|(?=\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.nim</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<key>generic-symbols</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[A-Z](_?[A-Z\d_])+\b</string>
					<key>name</key>
					<string>support.constant.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[A-Z][\dA-Za-z]+\b</string>
					<key>name</key>
					<string>support.type.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`</string>
				</dict>
			</array>
		</dict>
		<key>interpolation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>source.nim.embedded</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.end.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(`) *(?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_) *(`)</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?:addr|cast)\b</string>
					<key>name</key>
					<string>keyword.operator.word.nim</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\bdiscard +"""</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"""(?!")</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.nim</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:distinct|discard)\b</string>
					<key>name</key>
					<string>keyword.other.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:asm|end|break|continue|raise|return|yield)\b</string>
					<key>name</key>
					<string>keyword.control.flow.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:concept|enum|interface)\b</string>
					<key>name</key>
					<string>storage.type.nim</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(object)\b(?: *(of)\b)?</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bwhile\b</string>
					<key>name</key>
					<string>keyword.control.loop.while.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bcase\b</string>
					<key>name</key>
					<string>keyword.control.conditional.switch.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>^ *(of)\b</string>
					<key>name</key>
					<string>keyword.control.conditional.case.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bif\b</string>
					<key>name</key>
					<string>keyword.control.conditional.if.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bwhen\b</string>
					<key>name</key>
					<string>keyword.control.conditional.when.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\belif\b</string>
					<key>name</key>
					<string>keyword.control.conditional.elseif.nim</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.statement.conditional.else.nim</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.conditional.else.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.conditional.else.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(else)\b(?: *(:))?</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.statement.exception.try.nim</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.exception.try.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.exception.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(try)\b(?: *(:))?</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.statement.exception.finally.nim</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.exception.finally.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.exception.finally.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(finally)\b(?: *(:))?</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.defer.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.begin.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(defer)\b(?: *(:))?</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.declaration.block.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.begin.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(block)\b(?:(?: *(?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`))? *(:))?</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:as|(?:ex|im)port|include|bind|mixin|from|except)\b</string>
					<key>name</key>
					<string>keyword.control.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:const|let|var|using)\b</string>
					<key>name</key>
					<string>storage.modifier.nim</string>
				</dict>
			</array>
		</dict>
		<key>language-constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?:true|false|nil)\b</string>
					<key>name</key>
					<string>constant.language.nim</string>
				</dict>
			</array>
		</dict>
		<key>line-comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(#)(?: *(TODO|todo)\b)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.deprecated.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$\n?</string>
					<key>name</key>
					<string>comment.line.number-sign.nim</string>
				</dict>
			</array>
		</dict>
		<key>line-doc-comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>##</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$\n?</string>
					<key>name</key>
					<string>comment.line.documentation.nim</string>
				</dict>
			</array>
		</dict>
		<key>literals</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#str_lits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#characters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-constants</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.number.float.decimal.nim</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.nim</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.decimal.nim</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.exponent.nim</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.exponent.nim</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.suffix.nim</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.suffix.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x: \b(\d(?:_?\d)*) (?: (?: ((\.)\d(?:_?\d)*) ([Ee][-+]?\d(?:_?\d)*)? |([Ee][-+]?\d(?:_?\d)*) ) ('(?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_)|(?:[Ff](?:32|64)|[Dd]))? |('(?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_)|(?:[Ff](?:32|64)|[Dd])) ) )</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.number.float.hexadecimal.nim</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.base.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.nim</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.suffix.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x: \b(0[Xx]) (\h(?:_?\h)*) ('(?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_)|[Ff](?:32|64)) )</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.number.float.octal.nim</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.base.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.nim</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.suffix.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x: \b(0o) ([0-7](?:_?[0-7])*) ('(?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_)|(?:[Ff](?:32|64)|[Dd])) )</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.number.float.binary.nim</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.base.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.nim</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.suffix.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x: \b(0[Bb]) ([01](?:_?[01])*) ('(?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_)|(?:[Ff](?:32|64)|[Dd])) )</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.number.integer.hexadecimal.nim</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.base.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.nim</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.suffix.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x: \b(0[Xx]) (\h(?:_?\h)*) ('(?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_)|(?:[IUiu](?:8|16|32|64)|[Uu]))? )</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.number.integer.octal.nim</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.base.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.nim</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.suffix.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x: \b(0o) ([0-7](?:_?[0-7])*) ('(?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_)|(?:[IUiu](?:8|16|32|64)|[Uu]))? )</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.number.integer.binary.nim</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.base.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.nim</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.suffix.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x: \b(0[Bb]) ([01](?:_?[01])*) ('(?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_)|(?:[IUiu](?:8|16|32|64)|[Uu]))? )</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.number.integer.decimal.nim</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.value.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.suffix.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x: \b(\d(?:_?\d)*) ('(?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_)|(?:[IUiu](?:8|16|32|64)|[Uu]))? )</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?:and|not|x?or)\b</string>
					<key>name</key>
					<string>keyword.operator.logical.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>^of\b</string>
					<key>name</key>
					<string>keyword.control.conditional.case.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:of|(?:not)?in|is(?:not)?)\b</string>
					<key>name</key>
					<string>keyword.operator.word.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bsh[lr]\b</string>
					<key>name</key>
					<string>keyword.operator.bitwise.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:div|mod)\b</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>==|&lt;=?|&gt;=?|!=</string>
					<key>name</key>
					<string>keyword.operator.comparison.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:[-+*/@$&amp;%|^.:\\∙∘×★⊗⊘⊙⊛⊠⊡∩∧⊓±⊕⊖⊞⊟∪∨⊔][-=+*/&lt;&gt;@$~&amp;%|!?^.:\\∙∘×★⊗⊘⊙⊛⊠⊡∩∧⊓±⊕⊖⊞⊟∪∨⊔]*)?=(?![-=+*/&lt;&gt;@$~&amp;%|!?^.:\\∙∘×★⊗⊘⊙⊛⊠⊡∩∧⊓±⊕⊖⊞⊟∪∨⊔])</string>
					<key>name</key>
					<string>keyword.operator.assignment.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[-=+*/&lt;&gt;@$~&amp;%|!?^.:\\∙∘×★⊗⊘⊙⊛⊠⊡∩∧⊓±⊕⊖⊞⊟∪∨⊔]+</string>
					<key>name</key>
					<string>keyword.operator.nim</string>
				</dict>
			</array>
		</dict>
		<key>param-list</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parameters.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parameters.end.nim</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.parameters</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`</string>
							<key>name</key>
							<string>variable.parameter.nim</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[,;]</string>
							<key>name</key>
							<string>punctuation.separator.nim</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(:)|(=)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.annotation.nim</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.nim</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=[,;\)])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>patterns</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{(?!\.)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.pattern.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.pattern.end.nim</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.pattern.nim</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>pragmas</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{\.(?!\.})</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.annotation.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\.?}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.annotation.end.nim</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.annotation.nim</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#calls</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`</string>
							<key>name</key>
							<string>entity.other.attribute-name.pragma.nim</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#square-brackets</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=\S)</string>
							<key>end</key>
							<string>(,)|(?=\.?})</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.sequence.nim</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>:</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.key-value.nim</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(,)|(?=\.?})</string>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.sequence.nim</string>
										</dict>
									</dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>$self</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>punctuations</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.statement.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>:</string>
					<key>name</key>
					<string>punctuation.section.block.begin.nim</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.(?![-=+*/&lt;&gt;@$~&amp;%|!?^.:\\∙∘×★⊗⊘⊙⊛⊠⊡∩∧⊓±⊕⊖⊞⊟∪∨⊔])</string>
					<key>name</key>
					<string>punctuation.accessor.dot.nim</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.annotation.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\*) *(:|(?=,|#|\{\.))</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\)|]|}</string>
					<key>name</key>
					<string>invalid.illegal.nim</string>
				</dict>
			</array>
		</dict>
		<key>routines</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x: (proc|template|iterator|func|method|macro|converter)\b (?:[ ]*([A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`)(?:[ ]*(\*))?)? )</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.nim</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(:)|(?=[^#\(\[:\s]|##)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.annotation.nim</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.nim</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#patterns</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic-param-list</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#param-list</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>rstr_lit</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>([Rr])(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.nim punctuation.definition.string.begin.nim</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.quoted.double.nim</string>
					<key>end</key>
					<string>("(?!"))|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.nim punctuation.definition.string.end.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.nim invalid.illegal.unclosed-string.nim</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>""</string>
							<key>name</key>
							<string>constant.character.escape.nim</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>square-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.brackets.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.brackets.end.nim</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.brackets.nim</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>str_lit</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nim</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.nim</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(?:[ABCEFLNPRTVabceflnprtv"'\\]|\d+|[Xx]\h{2}|[Uu](?:\h{4}|\{\h+}))</string>
							<key>name</key>
							<string>constant.character.escape.nim</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\</string>
							<key>name</key>
							<string>invalid.illegal.lone-escape.nim</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>str_lits</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#triplestr_lit</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rstr_lit</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#str_lit</string>
				</dict>
			</array>
		</dict>
		<key>triplestr_lit</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>([Rr])?(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.triple.nim punctuation.definition.string.begin.nim</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.quoted.triple.nim</string>
					<key>end</key>
					<string>"""(?!")</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.triple.nim punctuation.definition.string.end.nim</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>type-defs</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^ *(type) +(?:(?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`) *(\.))?([A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`)(?: *(\*))?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.accessor.dot.nim</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.nim</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[^\[ ])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#generic-param-list</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^type\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^(?!  |$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>^  (?:(?:[A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`) *(\.))?([A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`)(?: *(\*))?</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.accessor.dot.nim</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.type.nim</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.nim</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?![\[\s])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#generic-param-list</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\btuple(?=\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.primitive.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[^\[ ])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#generic-param-list</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=(?:[A-Za-z](?:_?[\dA-Za-z])*)\[)(?x:(out|ptr|ref|array |cstring[Aa]rray|iterable|lent|open[Aa]rray|owned|ptr|range|ref|se[qt] |sink|static|type(?:[Dd]esc)?|varargs)|([A-Z][\dA-Za-z]+))(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.primitive.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.type.nim</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.generic.nim punctuation.section.generic.begin.nim</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.generic.nim</string>
					<key>end</key>
					<string>]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.generic.nim punctuation.section.generic.nim</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:out|tuple|ref|ptr)\b</string>
					<key>name</key>
					<string>storage.type.primitive.nim</string>
				</dict>
			</array>
		</dict>
		<key>var-let-using-defs</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?:^|(;)) *(var|let|using) +(?=[\(`A-Za-z\x80-\xff]|_\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[^\({_`,#A-Za-z\x80-\xff\s])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#var-name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(?:var|let|using)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^(?!  |$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>^  (?=[\(`A-Za-z\x80-\xff]|_\b)</string>
							<key>end</key>
							<string>(?=[^\({_`,#A-Za-z\x80-\xff\s])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#var-name</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>var-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.begin.nim</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))|(?=[^{_`,#A-Za-z\x80-\xff\s])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.end.nim</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#var-name-0</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#var-name-0</string>
				</dict>
			</array>
		</dict>
		<key>var-name-0</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.nim</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.nim</string>
						</dict>
					</dict>
					<key>match</key>
					<string>([A-Za-z\x80-\xff](?:_?[\dA-Za-z\x80-\xff])*|_|`[^;,\n`]+`)(?: *(\*))?</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.nim</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#pragmas</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#doc-comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.nim</string>
</dict>
</plist>
